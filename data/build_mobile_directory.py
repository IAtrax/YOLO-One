#!/usr/bin/env python3
"""
Script pour ajouter la structure mobile √† YOLO-One
√Ä ex√©cuter APR√àS build_directory.py
"""

from pathlib import Path

def create_mobile_structure():
    """Cr√©e la structure mobile compl√®te"""
    
    print("üì± Cr√©ation de la structure mobile YOLO-One...")
    
    # Structure mobile compl√®te
    mobile_dirs_and_files = {
        "mobile": ["README.md", "build_mobile.sh"],
        
        # Android
        "mobile/android": ["build.gradle", "settings.gradle"],
        "mobile/android/app": ["build.gradle"],
        "mobile/android/app/src/main/java/com/iatrax/yoloone": [
            "MainActivity.java", 
            "YOLOOneDetector.java"
        ],
        "mobile/android/app/src/main/cpp": [
            "native-lib.cpp"
        ],
        "mobile/android/app/src/main/assets": [
            "models.txt"
        ],
        
        # iOS
        "mobile/ios": ["Podfile", "README.md"],
        "mobile/ios/YOLOOne": [
            "ContentView.swift",
            "AppDelegate.swift"
        ],
        "mobile/ios/YOLOOne/Models": [
            "YOLOOneDetector.swift"
        ],
        
        # Shared
        "mobile/shared": [
            "model_converter.py",
            "benchmark_mobile.py"
        ]
    }
    
    # Cr√©er tout
    for folder, files in mobile_dirs_and_files.items():
        # Cr√©er le dossier
        Path(folder).mkdir(parents=True, exist_ok=True)
        print(f"üìÇ Dossier cr√©√©: {folder}/")
        
        # Cr√©er les fichiers
        for file in files:
            file_path = Path(folder) / file
            
            # Contenu basique selon le type
            if file.endswith('.java'):
                content = f"// {file}\n// TODO: Impl√©menter classe Java\npublic class {file.replace('.java', '')} {{\n    // Code ici\n}}"
            elif file.endswith('.swift'):
                content = f"// {file}\n// TODO: Impl√©menter SwiftUI\nimport SwiftUI\n\nstruct {file.replace('.swift', '')}: View {{\n    var body: some View {{\n        Text(\"Hello YOLO-One\")\n    }}\n}}"
            elif file.endswith('.py'):
                content = f"#!/usr/bin/env python3\n\"\"\"\n{file} - YOLO-One Mobile\n\"\"\"\n\n# TODO: Impl√©menter\nprint('YOLO-One Mobile Tools')"
            else:
                content = f"# {file}\n# TODO: Configuration pour {file}"
            
            file_path.write_text(content, encoding='utf-8')
            print(f"üìÑ Fichier cr√©√©: {folder}/{file}")
    
    print("\n‚úÖ Structure mobile cr√©√©e avec succ√®s !")
    print("\nüì± Dossiers cr√©√©s :")
    print("   ü§ñ mobile/android/     - App Android")
    print("   üçé mobile/ios/         - App iOS") 
    print("   üîß mobile/shared/      - Outils partag√©s")

if __name__ == "__main__":
    create_mobile_structure()